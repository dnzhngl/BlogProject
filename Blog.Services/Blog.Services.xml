<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blog.Services</name>
    </assembly>
    <members>
        <member name="M:Blog.Services.Abstract.ICategoryService.AddAsync(Blog.Entities.Dtos.CategoryAddDto,System.String)">
            <summary>
            Adds a new Category into the database with the given data in parameters.
            </summary>
            <param name="categoryAddDto"> The information of the Category to be added must be entered in CategoryAddDto type. </param>
            <param name="createdByName"> The username of the creator must be entered in a type of string. </param>
            <returns> Returns type of DataResult as a result of an asynchronous adding operation. </returns>
        </member>
        <member name="M:Blog.Services.Abstract.ICategoryService.GetCategoryUpdateDtoAsync(System.Int32)">
            <summary>
            Gets the category, if any, with the specified id. If it can not find any data, CategoryUpdateDto returns with the ResulStatus.Error and NotFound message.
            </summary>
            <param name="categoryId">CategoryId must be bigger than 0 and type of integer.</param>
            <returns>Returns type of DataResult as a result of an asynchronous operation.</returns>
        </member>
        <member name="M:Blog.Services.Concrete.CategoryManager.AddAsync(Blog.Entities.Dtos.CategoryAddDto,System.String)">
            <summary>
            Adds a new Category into the database with the given data in parameters.
            </summary>
            <param name="categoryAddDto"> The information of the Category to be added must be entered in CategoryAddDto type. </param>
            <param name="createdByName"> The username of the creator must be entered in a type of string. </param>
            <returns> Returns type of DataResult as a result of an asynchronous adding operation. </returns>
        </member>
        <member name="M:Blog.Services.Concrete.CategoryManager.GetCategoryUpdateDtoAsync(System.Int32)">
            <summary>
            Gets the category, if any, with the specified id. If it can not find any data, CategoryUpdateDto returns with the ResulStatus.Error and NotFound message.
            </summary>
            <param name="categoryId">CategoryId must be bigger than 0 and type of integer.</param>
            <returns>Returns type of DataResult as a result of an asynchronous operation.</returns>
        </member>
    </members>
</doc>
